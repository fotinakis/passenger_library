---
title: Integration modes
section: indepth
---
<% content_for(:sidebar) { render_partial("sidebar.html", locals: locals) } %>

# Integration modes

As explained in [the basics walkthrough](<%= url_for '/walkthroughs/basics/index.html' %>), Passenger collaborates with other components. This is why Passenger supports multiple *integration modes*. Each integration mode is designed for easy collaboration with a different component.

On this page we will explain the differences between the modes, and advise you on how to choose a mode.

**Table of contents**

<ol class="toc-container"><li>Loading...</li></ol>

## The modes explained

During development, you will usually want to use the Standalone mode because it's the most convenient in that context. But in production you may want to think about which integration mode to pick.

<%= render_partial("/walkthroughs/basics/shared/integration_modes.md", locals: { context: :standalone }) %>

## Each mode is mostly independent

Each mode is mostly independent from the others. This means that each mode has its own configuration mechanism and its own way to be started/stopped, unless explicitly documented otherwise.

For example, the Apache integration mode is [configured through the Apache configuration file](<%= url_for '/config/apache/intro.html' %>); the Nginx integration mode is [configured through the Nginx configuration file](<%= url_for '/config/nginx/intro.html' %>); while the Standalone mode [configured through command line parameters and its own configuration file](<%= url_for '/config/standalone/intro.html' %>). Configuring Passenger for Standalone will have no effect on Passenger for Nginx.

As another example, starting and stopping Passenger Standalone instances will have no effect on Passenger for Apache.

## Which mode should you use?

Here are some tips on how to decide on which integration mode to use.

The Nginx mode is a good default choice for production
: The Nginx mode is what we recommend for most people in production environments. It's fast, easy to use, well-supported, has lots of features.

The Standalone mode is a good default choice for development
: The Standalone mode is what we recommend for most people in development environments. It's very easy to use and requires practically no setup.

Do you host multiple apps on a single server?
: Choose either the Apache or the Nginx integration mode.

Using WebSockets? (e.g. using Meteor?)
: Choose the Nginx integration mode or the Standalone mode. WebSockets don't work so well over Apache. If you use Meteor, then you should know Meteor core technology relies on WebSockets, so Apache is out of the question.

Are you already familiar with Nginx or Apache?
: Choose the integration mode for that web server.

Are you a hardcore ops engineer or sysadmin with lots of experience, and do you want maximum control over your architecture while understanding how exactly every component works?
: Choose the Standalone mode.

## See also

 * [Deployment tutorial](<%= url_for '/walkthroughs/deploy/index.html' %>)
 * [Installation, upgrade and installation guides](<%= url_for '/install/index.html' %>)
